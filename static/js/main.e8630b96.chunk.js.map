{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","id","onClick","href","title","find","content","App","useState","setSelectedTab","useEffect","includes","newTab","ReactDOM","render","document","getElementById"],"mappings":"0KAeaA,EAAO,SAAC,GAAmD,IAAD,EAAhDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,cAC1C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWF,IAAkBI,EAAIC,GAAK,YAAc,GACpD,UAAQ,MAERC,QAASN,IAAkBI,EAAIC,GAC3B,kBAAM,MACN,kBAAMJ,EAAcG,IAN1B,SAQE,mBAAGG,KAAI,WAAMH,EAAIC,IAAM,UAAQ,UAA/B,SAA0CD,EAAII,SALzCJ,EAAIC,WAWjB,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,UACG,UAAAH,EAAKU,MAAK,SAAAL,GAAG,OAAIA,EAAIC,KAAOL,YAA5B,eAA4CU,UAAW,SC9BnDX,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAAwCC,mBAAS,SAAjD,mBAAOZ,EAAP,KAAsBa,EAAtB,KAEAC,qBAAU,WACHf,EAAKI,KAAI,SAAAC,GAAG,OAAIA,EAAIC,MAAIU,SAASf,IACpCa,EAAe,WAEhB,CAACb,IASJ,OACE,sBAAKE,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,KACA,UAAAH,EAAKU,MAAK,SAAAL,GAAG,OAAIA,EAAIC,KAAOL,YAA5B,eAA4CQ,QAAS,MAGxD,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EACfC,cAlBgB,SAACe,GAIrBH,EAAeG,EAAOX,WCtB1BY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.e8630b96.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport '../../App.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ntype Props = {\n  tabs: { id: string; title: string; content: string; }[];\n  selectedTabId: string;\n  onTabSelected: (param: {\n    id: string;\n    title: string;\n    content: string }) => void;\n};\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: Props) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={selectedTabId === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n              onClick={selectedTabId === tab.id\n                ? () => null\n                : () => onTabSelected(tab)}\n            >\n              <a href={`#${tab.id}`} data-cy=\"TabLink\">{tab.title}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content || ''}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTab] = useState('tab-1');\n\n  useEffect(() => {\n    if (!tabs.map(tab => tab.id).includes(selectedTabId)) {\n      setSelectedTab('tab-1');\n    }\n  }, [selectedTabId]);\n\n  const onTabSelected = (newTab: {\n    id: string;\n    title: string;\n    content: string }) => {\n    setSelectedTab(newTab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabs.find(tab => tab.id === selectedTabId)?.title || ''}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}