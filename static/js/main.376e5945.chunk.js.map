{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","id","href","onClick","title","find","content","App","useState","selectedTab","setSelectedTab","newTab","includes","ReactDOM","render","document","getElementById"],"mappings":"0KAkBaA,EAAO,SAAC,GAAmD,IAAD,EAAhDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,cAC1C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWF,IAAkBI,EAAIC,GAAK,YAAc,GACpD,UAAQ,MAFV,SAKE,mBACEC,KAAI,WAAMF,EAAIC,IACd,UAAQ,UACRE,QAASP,IAAkBI,EAAIC,GAC3B,kBAAM,MACN,kBAAMJ,EAAcG,IAL1B,SAOGA,EAAII,SATFJ,EAAIC,WAiBjB,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,UACG,UAAAH,EAAKU,MAAK,SAAAL,GAAG,OAAIA,EAAIC,KAAOL,YAA5B,eAA4CU,UAAW,SCvCnDX,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASb,EAAK,IAApD,mBAAOc,EAAP,KAAoBC,EAApB,KAeA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,EAAYL,SAGlC,cAAC,EAAD,CACET,KAAMA,EACNC,cAAea,EAAYR,GAC3BJ,cAtBgB,SAACc,GAIjBA,EAAOV,KAAOQ,EAAYR,KACvBN,EAAKI,KAAI,SAAAC,GAAG,OAAIA,EAAIC,MAAIW,SAASH,EAAYR,KAChDS,EAAef,EAAK,IAGtBe,EAAeC,WCrBrBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.376e5945.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport '../../App.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: Props) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={selectedTabId === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={selectedTabId === tab.id\n                  ? () => null\n                  : () => onTabSelected(tab)}\n              >\n                {tab.title}\n\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content || ''}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (newTab: {\n    id: string;\n    title: string;\n    content: string }) => {\n    if (newTab.id !== selectedTab.id) {\n      if (!tabs.map(tab => tab.id).includes(selectedTab.id)) {\n        setSelectedTab(tabs[0]);\n      }\n\n      setSelectedTab(newTab);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}